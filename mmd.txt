==84545== Memcheck, a memory error detector
==84545== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==84545== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info
==84545== Command: ./rogue
==84545== 
==84545== Invalid write of size 8
==84545==    at 0x122696: LoadGame (save.c:122)
==84545==    by 0x1113BC: StartGame (game.c:72)
==84545==    by 0x10ABBC: handle_logged_in_choice (menu.c:107)
==84545==    by 0x10AA13: show_main_menu (menu.c:76)
==84545==    by 0x10A7EE: main (main.c:23)
==84545==  Address 0x5586250a4eb0 is not stack'd, malloc'd or (recently) free'd
==84545== 
==84545== 
==84545== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==84545==  Access not within mapped region at address 0x5586250A4EB0
==84545==    at 0x122696: LoadGame (save.c:122)
==84545==    by 0x1113BC: StartGame (game.c:72)
==84545==    by 0x10ABBC: handle_logged_in_choice (menu.c:107)
==84545==    by 0x10AA13: show_main_menu (menu.c:76)
==84545==    by 0x10A7EE: main (main.c:23)
==84545==  If you believe this happened as a result of a stack
==84545==  overflow in your program's main thread (unlikely but
==84545==  possible), you can try to increase the size of the
==84545==  main thread stack using the --main-stacksize= flag.
==84545==  The main thread stack size used in this run was 8388608.
==84545== 
==84545== HEAP SUMMARY:
==84545==     in use at exit: 894,550 bytes in 642 blocks
==84545==   total heap usage: 664 allocs, 22 frees, 921,910 bytes allocated
==84545== 
==84545== LEAK SUMMARY:
==84545==    definitely lost: 256 bytes in 2 blocks
==84545==    indirectly lost: 0 bytes in 0 blocks
==84545==      possibly lost: 985 bytes in 15 blocks
==84545==    still reachable: 893,309 bytes in 625 blocks
==84545==         suppressed: 0 bytes in 0 blocks
==84545== Rerun with --leak-check=full to see details of leaked memory
==84545== 
==84545== For lists of detected and suppressed errors, rerun with: -s
==84545== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
