==46758== Memcheck, a memory error detector
==46758== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==46758== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info
==46758== Command: ./rogue --track-origins=yes -s
==46758== 
==46758== Conditional jump or move depends on uninitialised value(s)
==46758==    at 0x113A9A: add_lockshow_to_level (in /home/septyr/ncurses/github/fop2024-project-RedDragon8406/rogue)
==46758==    by 0x11100D: InitLevelRoom (in /home/septyr/ncurses/github/fop2024-project-RedDragon8406/rogue)
==46758==    by 0x11029E: StartGame (in /home/septyr/ncurses/github/fop2024-project-RedDragon8406/rogue)
==46758==    by 0x10AB10: handle_logged_in_choice (in /home/septyr/ncurses/github/fop2024-project-RedDragon8406/rogue)
==46758==    by 0x10A973: show_main_menu (in /home/septyr/ncurses/github/fop2024-project-RedDragon8406/rogue)
==46758==    by 0x10A74E: main (in /home/septyr/ncurses/github/fop2024-project-RedDragon8406/rogue)
==46758== 
==46758== Conditional jump or move depends on uninitialised value(s)
==46758==    at 0x113A9A: add_lockshow_to_level (in /home/septyr/ncurses/github/fop2024-project-RedDragon8406/rogue)
==46758==    by 0x11100D: InitLevelRoom (in /home/septyr/ncurses/github/fop2024-project-RedDragon8406/rogue)
==46758==    by 0x110975: StartGame (in /home/septyr/ncurses/github/fop2024-project-RedDragon8406/rogue)
==46758==    by 0x10AB10: handle_logged_in_choice (in /home/septyr/ncurses/github/fop2024-project-RedDragon8406/rogue)
==46758==    by 0x10A973: show_main_menu (in /home/septyr/ncurses/github/fop2024-project-RedDragon8406/rogue)
==46758==    by 0x10A74E: main (in /home/septyr/ncurses/github/fop2024-project-RedDragon8406/rogue)
==46758== 
==46758== 
==46758== HEAP SUMMARY:
==46758==     in use at exit: 1,187,596 bytes in 1,884 blocks
==46758==   total heap usage: 2,014 allocs, 130 frees, 1,324,268 bytes allocated
==46758== 
==46758== LEAK SUMMARY:
==46758==    definitely lost: 2,604 bytes in 72 blocks
==46758==    indirectly lost: 1,300 bytes in 33 blocks
==46758==      possibly lost: 985 bytes in 15 blocks
==46758==    still reachable: 1,182,707 bytes in 1,764 blocks
==46758==         suppressed: 0 bytes in 0 blocks
==46758== Rerun with --leak-check=full to see details of leaked memory
==46758== 
==46758== Use --track-origins=yes to see where uninitialised values come from
==46758== For lists of detected and suppressed errors, rerun with: -s
==46758== ERROR SUMMARY: 30 errors from 2 contexts (suppressed: 0 from 0)
